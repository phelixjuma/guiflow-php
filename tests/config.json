[
  {
    "rule": "Get customers list",
    "skip": "0",
    "description": "",
    "stage": "get_customers_list",
    "dependencies": [],
    "condition": "always",
    "actions": [
      {
        "description": "",
        "stage": "get_customers_list",
        "dependencies": [],
        "action": "function",
        "path": "customers_list",
        "function": "get_master_data",
        "args": {
          "type": "customers"
        }
      }
    ]
  },
  {
    "rule": "Match customer",
    "skip": "0",
    "description": "match_customers",
    "stage": "match_customers",
    "dependencies": ["get_customers_list"],
    "condition": {
      "path": "customers_list",
      "operator": "exists"
    },
    "actions": [
      {
        "description": "",
        "stage": "search_customer",
        "dependencies": [],
        "action": "function",
        "path": "customer_name",
        "function": "semantic_search",
        "args": {
          "corpus": {
            "path": "customers_list"
          },
          "corpus_key": "BPNAME",
          "master_data_type": "customers",
          "similarity_threshold": "80"
        }
      },
      {
        "description": "",
        "stage": "delete_customer_list",
        "dependencies": ["search_customer"],
        "skip": "0",
        "action": "remove_path",
        "path": "customers_list"
      }
    ]
  },
  {
    "rule": "Get products list",
    "skip": "0",
    "description": "",
    "stage": "get_products_list",
    "dependencies": [],
    "condition": "always",
    "actions": [
      {
        "description": "",
        "stage": "get_product_list",
        "dependencies": [],
        "action": "function",
        "path": "products_list",
        "function": "get_master_data",
        "args": {
          "type": "all products"
        }
      }
    ]
  },
  {
    "rule": "Get brand code from product name",
    "skip": "0",
    "description": "",
    "stage": "get_product_brand",
    "dependencies": ["get_product_list"],
    "condition": {
      "path": "products_list",
      "operator": "exists"
    },
    "actions": [
      {
        "description": "",
        "stage": "set_product_principal_code",
        "dependencies": [],
        "action": "function",
        "path": "products_list.*.ItemCode",
        "function": "custom_preg_replace",
        "args": {
          "pattern": "/^([A-Z]*).*$/",
          "replacement": "$1"
        },
        "newField": "products_list.*.PrincipalCode"
      }
    ]
  },
  {
    "rule": "Match Products",
    "skip": "0",
    "description": "",
    "stage": "match_products",
    "dependencies": ["get_product_list"],
    "condition": {
      "path": "products_list",
      "operator": "exists"
    },
    "actions": [
      {
        "description": "",
        "stage": "match_products",
        "dependencies": [],
        "action": "function",
        "path": "items",
        "function": "semantic_match",
        "args": {
          "matching_key": "name",
          "corpus": {
            "path": "products_list"
          },
          "corpus_key": "ItemName",
          "master_data_type": "all products",
          "similarity_threshold": "80"
        }
      },
      {
        "description": "",
        "stage": "delete_products_list",
        "dependencies": ["match_products"],
        "skip": "0",
        "action": "remove_path",
        "path": "products_list"
      }
    ]
  },
  {
    "rule": "Set item quantity",
    "skip": "0",
    "description": "",
    "stage": "set_product_quantity",
    "dependencies": [],
    "condition": {
      "path": "items.*.original_value.unit_of_measure",
      "operator": "exists"
    },
    "actions": [
      {
        "description": "",
        "stage": "get_item_number_of_pieces",
        "dependencies": [],
        "action": "function",
        "path": "items.*.original_value.unit_of_measure",
        "function": "assoc_array_find",
        "args": {
          "condition_field": "selling_unit",
          "condition_operator": "similar_to",
          "condition_value": "Pieces - PCS",
          "condition_threshold": "80",
          "return_field": "selling_quantity"
        },
        "newField": "items.*.original_value.number_of_pieces"
      },
      {
        "description": "",
        "stage": "get_item_number_of_cases",
        "dependencies": [],
        "action": "function",
        "path": "items.*.original_value.unit_of_measure",
        "function": "assoc_array_find",
        "args": {
          "condition_field": "selling_unit",
          "condition_operator": "similar_to",
          "condition_value": "Cases - CS",
          "condition_threshold": "80",
          "return_field": "selling_quantity"
        },
        "newField": "items.*.original_value.number_of_cases"
      },
      {
        "description": "Get the pack unit of measure",
        "stage": "get_pack_unit_of_measure",
        "dependencies": [],
        "action": "function",
        "path": "items",
        "function": "map_parallel",
        "args": {
          "path": "",
          "function": "set",
          "args": {
            "data_path": "",
            "value": "Phelix",
            "valueFromField": "",
            "valueMapping": "",
            "conditionalValue":"",
            "newField": "created_by"
          },
          "newField": "",
          "strict": "0",
          "condition": ""
        },
        "newField": "",
        "strict": "0",
        "condition": ""
      },
      {
        "description": "Get the pack unit of measure",
        "stage": "append_pack_size",
        "dependencies": ["get_pack_unit_of_measure"],
        "skip": "0",
        "action": "function",
        "path": "items",
        "function": "map_parallel",
        "args": {
          "path": "",
          "function": "set",
          "args": {
            "data_path": "",
            "value": "",
            "valueFromField": "created_by",
            "valueMapping": "",
            "conditionalValue":"",
            "newField": "created_by_full"
          },
          "newField": "",
          "strict": "0",
          "condition": ""
        },
        "newField": "",
        "strict": "0",
        "condition": ""
      }
    ]
  },
  {
    "rule": "Split orders for different brands",
    "skip": "0",
    "description": "",
    "stage": "split_orders",
    "dependencies": [],
    "condition": {
      "path": "items.*.matched_value.PrincipalCode",
      "operator": "exists"
    },
    "actions": [
      {
        "description": "",
        "stage": "split_items",
        "dependencies": [],
        "action": "function",
        "path": "",
        "function": "split",
        "args": {
          "split_path": "items",
          "criteria_path": "items.*.matched_value.PrincipalCode"
        }
      }
    ]
  },
  {
    "rule": "Get brand code",
    "skip": "0",
    "description": "",
    "stage": "get_brand_code",
    "dependencies": [],
    "condition": {
      "path": "items.*.matched_value.PrincipalCode",
      "operator": "exists"
    },
    "actions": [
      {
        "description": "",
        "stage": "set_item_principal_code",
        "dependencies": [],
        "action": "set",
        "path": "PrincipalCode",
        "value": "",
        "valueFromField": "items.0.matched_value.PrincipalCode"
      }
    ]
  }
]
